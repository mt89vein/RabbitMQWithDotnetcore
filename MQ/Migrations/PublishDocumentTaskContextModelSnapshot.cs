// <auto-generated />
using System;
using MQ.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MQ.Migrations
{
    [DbContext(typeof(PublishDocumentTaskContext))]
    partial class PublishDocumentTaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MQ.Models.PublishDocumentTask", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DocumentId");

                    b.Property<int>("DocumentRevision");

                    b.Property<int>("DocumentType");

                    b.Property<long?>("LoadId");

                    b.Property<int>("OrganizationId");

                    b.Property<string>("Payload");

                    b.Property<string>("RefId");

                    b.Property<int>("State");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("PublishDocumentTasks");
                });

            modelBuilder.Entity("MQ.Models.PublishDocumentTaskAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsHasEisError");

                    b.Property<Guid>("PublishDocumentTaskId");

                    b.Property<string>("Request");

                    b.Property<string>("Response");

                    b.Property<int>("Result");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("PublishDocumentTaskId");

                    b.ToTable("PublishDocumentTaskAttempts");
                });

            modelBuilder.Entity("MQ.Models.PublishDocumentTaskAttempt", b =>
                {
                    b.HasOne("MQ.Models.PublishDocumentTask", "PublishDocumentTask")
                        .WithMany("PublishDocumentTaskAttempts")
                        .HasForeignKey("PublishDocumentTaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
